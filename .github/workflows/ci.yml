name: CI/CD

on: push

jobs:
  
    test:
        name: Test
        runs-on: ubuntu-latest
        steps:
            - name: Checkout
              uses: actions/checkout@v2

            - name: Build docker images
              run: |
                docker-compose pull
                docker-compose build

            - name: Run tests
              run: |
                docker-compose run contact-form ./wait-for-it.sh localstack:4569 -- flask dynamodb create
                docker-compose run contact-form ./wait-for-it.sh localstack:4569 -- pytest --cov -x

    build:
      name:  Build JS client
      runs-on: ubuntu-latest
      needs: test
      steps:
        - name: Checkout
          uses: actions/checkout@v2
        
        - name: Setup node
          uses: actions/setup-node@v1
          with:
            node-version: 10.x
        
        - name: Build scripts
          run: |
            cd jsclient
            yarn install
            yarn run prod

        - uses: actions/upload-artifact@v2
          with:
            name: client-script
            path: application/static/js/app.js

    deploy:
      name: Deploy staging
      runs-on: ubuntu-latest
      needs: build
      steps:
        - name: Checkout
          uses: actions/checkout@v2
        
        - uses: actions/setup-python@v2
          with:
            python-version: '3.8'

        - name: Requirements
          run: |
            python3 -m venv env
            source env/bin/activate
            pip install -r requirements.txt
        
        - name: Clean up
          run: |
            find . -name \*.pyc -delete

        - uses: actions/download-artifact@v2
          with:
            name: client-script

        - name: List dirs
          run: |
            echo "Application js"
            ls -la application/static/js
            echo "Working dir"
            ls -la

        - name: Configure AWS Credentials
          uses: aws-actions/configure-aws-credentials@v1
          with:
            aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
            aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            aws-region: eu-west-1

        - name: Deploy staging
          env:
            AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
            AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            AWS_REGION: eu-west-1
            AWS_DEFAULT_REGION: eu-west-1
            SECRET_KEY: ${{ secrets.SECRET_KEY }}
            DATWIT_RCPT: contact@datwit.com
            FLASK_APP: application:create_app('config.StagingConfig')
            STAGE: dev
          run: |
            mv app.js application/static/js/app.js
            source env/bin/activate
            flask dynamodb create
            zappa update dev
